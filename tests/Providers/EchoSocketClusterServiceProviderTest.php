<?php

namespace EchoSocketCluster\Tests\Providers;

use EchoSocketCluster\Providers\EchoSocketClusterServiceProvider;
use EchoSocketCluster\Tests\TestCase;
use Illuminate\Container\Container;
use Illuminate\Foundation\Application;
use Mockery as m;


class EchoSocketClusterServiceProviderTest extends TestCase {
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $app = m::mock('Illuminate\Foundation\Application')->makePartial();
        $app['config'] = m::mock('Illuminate\Config\Repository')->makePartial();
        Container::setInstance($app);
    }


    public function testShouldBoot()
    {

        $app = app();

        $app['path.config'] = __DIR__ . '/../../config';

        $app->shouldReceive('make')->once()->with('Illuminate\Broadcasting\BroadcastManager')->andReturn($app);

        $app->shouldReceive('extend')->once()->andReturnUsing(function ($driver, $callback) use ($app) {
            $this->assertEquals('echosocketcluster', $driver);

            $broadcaster = $callback($app);
            $this->assertInstanceOf('EchoSocketCluster\Laravel\EchoSocketClusterBroadcaster', $broadcaster);
        });


        $sp = new EchoSocketClusterServiceProvider($app);

        $sp->boot();



    }

    public function testShouldRegister(){
        $app = app();

        $app['path.config'] = __DIR__ . '/../../config';

        $sp = new EchoSocketClusterServiceProvider($app);

        $sp->register();

        $this->assertArrayHasKey('broadcast_host', config('echo-sc'));
        $this->assertArrayHasKey('user_token', config('echo-sc'));
    }

}